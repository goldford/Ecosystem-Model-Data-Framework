df_summary_grp <- df_summary_grp %>%
mutate(
GenusLumped = ifelse(Genus %in% top4_genera, as.character(Genus), "Other"),
GenusLumped = factor(GenusLumped, levels = c(top4_genera, "Other"))
)
# 4. Plot stacked bars: top 4 + “Other”
p_ZC1_EUP <- ggplot(
df_summary_grp %>% filter(.data[[UNITS_FIELD]] > 0.0),
aes(
x    = season,
y    = .data[[UNITS_FIELD]],
fill = GenusLumped
)
) +
geom_bar(stat = "identity", position = "stack") +
theme(legend.position = "right") +
labs(
title = "Euphausiids",
x     = "Season",
y     = "Biomass (g C m⁻²)",
fill  = "Genus"
)
p_ZC1_EUP
View(df_summary_grp)
# correspondence with I. Perry and K. Young Nov 16 2021
# - the mg m-2 is calculated using the tow start - end depth
# calculate the tow depth range
df_2['tow_depth_range'] = abs(df_2['Tow_start_depth.m.'])-abs(df_2['Tow_end_depth.m.'])
summary(df_2['tow_depth_range'])
# //////////////////////////////////////////////////////////////////////////////////
# net avoidance euphausiids adjust by 3x for adults
netavoid_x = 3
df_2 = df_2 %>%
mutate(Abundance.m3. = case_when((size_class=="s3" & Order == "Euphausiacea") ~ Abundance.m3. * netavoid_x,
TRUE ~ Abundance.m3.))
# cross-check
euphausiids = df_2 %>% filter(Order == "Euphausiacea")
colnames(euphausiids)
#arrange(euphausiids, desc(B_g_m2_DW), .by_group = FALSE)
print(unique(euphausiids$Genus_species))
# //////////////////////////////////////////////////////////////////////////////////
# create a season field
df_2 = df_2 %>%
mutate(B_mg_m3_DW = Abundance.m3. * Average_biomass_per_individual.mg.) %>% # convert to mg m-3
mutate(B_g_m2_DW = B_mg_m3_DW * tow_depth_range * mg_to_g) %>%  # mg m-3 to g m-2
# not converting to WW B yet
mutate(season = case_when(Month == 12 | Month == 1 | Month == 2 ~ "winter",
Month == 3 | Month == 4 | Month == 5 ~ "spring",
Month == 6 | Month == 7 | Month == 8 ~ "summer",
Month == 9 | Month == 10 | Month == 11 ~ "fall"))
nrow(df_2)
# Perry et al selected start depths with gt 150 m and  those with start depths <150 where
# the tow depth range was gt 70% of the water column
df_2 = df_2 %>%
mutate(towrange_as_prop_watercol = tow_depth_range / Bottom_depth.m.) %>%
filter(towrange_as_prop_watercol >= 0.7 | Tow_start_depth.m. >= 150)
nrow(df_2)
# seems like the filter above was already applied
#print("groups ordered by DW B")
#arrange(df_2, desc(B_g_m2_DW), .by_group = FALSE)
# //////////////////////////////////////////////////////////////////////////////////
# n_surveys used to avoid biasing density estimates using these presence-only data
# (absent species are not reported in these data)
n_surveys = n_distinct(df_2[c('Index')])
df_2$n_surveys = n_surveys
# table of surveys conducted per year
n_surveys_yr = df_2 %>% group_by(Year,Index) %>%
summarise(n = n()) %>%
mutate(surveycount = 1) %>%
ungroup() %>%
group_by(Year) %>%
summarise(count_surveys_yr = sum(surveycount))
df_2 = inner_join(df_2, n_surveys_yr, by = c("Year"="Year"))
#df_2 = inner_join(df_2, n_surveys_yr, cols = "Year")
# per year  and season
n_surveys_yrseas = df_2 %>% group_by(Year,season,Index) %>%
summarise(n = n()) %>%
mutate(surveycount = 1) %>%
ungroup() %>%
group_by(Year,season) %>%
summarise(count_surveys_yrseas = sum(surveycount))
#df_2 = inner_join(df_2, n_surveys_yrseas, cols = c("Year","season"))
df_2 = inner_join(df_2, n_surveys_yrseas, by = c("Year"="Year", "season"="season"))
colnames(df_2)
# //////////////////////////////////////////////////////////////////////////////////
# get average by YEAR and SEASON using taxa resoluation (size class)
print("YEAR, SEASON, summary nrow before")
nrow(df_2)
df_2_sizeclasslev = df_2 %>%
group_by(Year, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,Size_class_or_life_stage,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%
summarise(B_mg_m3_DW = sum(round(B_mg_m3_DW, digits=3)),
B_g_m2_DW = sum(round(B_g_m2_DW, digits=3)),
Abundance.m3 = sum(round(Abundance.m3., digits=3)),
AdultBody_size_mg = mean(round(Average_biomass_per_individual.mg., digits=3)),
# n_occurrences is not used but summarizes how often the group appears in that season / year surveys
n_occurrences = n()) %>%
# divide the sums from above by proper denominator (count of surveys done including zero abundance ones)
mutate(B_mean_mg_m3_DW = round(B_mg_m3_DW / count_surveys_yrseas, digits=3)) %>%
mutate(B_mean_g_m2_DW = round(B_g_m2_DW / count_surveys_yrseas, digits=3)) %>%
distinct() %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
# correspondence with I. Perry and K. Young Nov 16 2021
# - the mg m-2 is calculated using the tow start - end depth
# calculate the tow depth range
df_2['tow_depth_range'] = abs(df_2['Tow_start_depth.m.'])-abs(df_2['Tow_end_depth.m.'])
summary(df_2['tow_depth_range'])
# //////////////////////////////////////////////////////////////////////////////////
# net avoidance euphausiids adjust by 3x for adults
netavoid_x = 3
df_2 = df_2 %>%
mutate(Abundance.m3. = case_when((size_class=="s3" & Order == "Euphausiacea") ~ Abundance.m3. * netavoid_x,
TRUE ~ Abundance.m3.))
# cross-check
euphausiids = df_2 %>% filter(Order == "Euphausiacea")
colnames(euphausiids)
#arrange(euphausiids, desc(B_g_m2_DW), .by_group = FALSE)
print(unique(euphausiids$Genus_species))
# //////////////////////////////////////////////////////////////////////////////////
# create a season field
df_2 = df_2 %>%
mutate(B_mg_m3_DW = Abundance.m3. * Average_biomass_per_individual.mg.) %>% # convert to mg m-3
mutate(B_g_m2_DW = B_mg_m3_DW * tow_depth_range * mg_to_g) %>%  # mg m-3 to g m-2
# not converting to WW B yet
mutate(season = case_when(Month == 12 | Month == 1 | Month == 2 ~ "winter",
Month == 3 | Month == 4 | Month == 5 ~ "spring",
Month == 6 | Month == 7 | Month == 8 ~ "summer",
Month == 9 | Month == 10 | Month == 11 ~ "fall"))
nrow(df_2)
# Perry et al selected start depths with gt 150 m and  those with start depths <150 where
# the tow depth range was gt 70% of the water column
df_2 = df_2 %>%
mutate(towrange_as_prop_watercol = tow_depth_range / Bottom_depth.m.) %>%
filter(towrange_as_prop_watercol >= 0.7 | Tow_start_depth.m. >= 150)
nrow(df_2)
# seems like the filter above was already applied
#print("groups ordered by DW B")
#arrange(df_2, desc(B_g_m2_DW), .by_group = FALSE)
# //////////////////////////////////////////////////////////////////////////////////
# n_surveys used to avoid biasing density estimates using these presence-only data
# (absent species are not reported in these data)
n_surveys = n_distinct(df_2[c('Index')])
df_2$n_surveys = n_surveys
# table of surveys conducted per year
n_surveys_yr = df_2 %>% group_by(Year,Index) %>%
summarise(n = n()) %>%
mutate(surveycount = 1) %>%
ungroup() %>%
group_by(Year) %>%
summarise(count_surveys_yr = sum(surveycount))
df_2 = inner_join(df_2, n_surveys_yr, by = c("Year"="Year"))
#df_2 = inner_join(df_2, n_surveys_yr, cols = "Year")
# per year  and season
n_surveys_yrseas = df_2 %>% group_by(Year,season,Index) %>%
summarise(n = n()) %>%
mutate(surveycount = 1) %>%
ungroup() %>%
group_by(Year,season) %>%
summarise(count_surveys_yrseas = sum(surveycount))
#df_2 = inner_join(df_2, n_surveys_yrseas, cols = c("Year","season"))
df_2 = inner_join(df_2, n_surveys_yrseas, by = c("Year"="Year", "season"="season"))
colnames(df_2)
# //////////////////////////////////////////////////////////////////////////////////
# get average by YEAR and SEASON using taxa resoluation (size class)
print("YEAR, SEASON, summary nrow before")
nrow(df_2)
df_2_sizeclasslev = df_2 %>%
group_by(Year, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,Size_class_or_life_stage,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%
summarise(B_mg_m3_DW = sum(round(B_mg_m3_DW, digits=3)),
B_g_m2_DW = sum(round(B_g_m2_DW, digits=3)),
Abundance.m3 = sum(round(Abundance.m3., digits=3)),
AdultBody_size_mg = mean(round(Average_biomass_per_individual.mg., digits=3)),
# n_occurrences is not used but summarizes how often the group appears in that season / year surveys
n_occurrences = n()) %>%
# divide the sums from above by proper denominator (count of surveys done including zero abundance ones)
mutate(B_mean_mg_m3_DW = round(B_mg_m3_DW / count_surveys_yrseas, digits=3)) %>%
mutate(B_mean_g_m2_DW = round(B_g_m2_DW / count_surveys_yrseas, digits=3)) %>%
distinct() %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
print("nrow_after")
nrow(df_2_sizeclasslev)
# old way
# print("summarize by Genus_species instead of Size_class_or_life_stage")
# print("nrow before")
# nrow(df_2)
# df_2 = df_2 %>%
#     group_by(Index, Station, Longitude..N., Latitude..W., Year, Month, Day, Time, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%
#     summarise(B_mg_m3_DW = sum(round(B_mg_m3_DW, digits=2)),
#           B_g_m2_DW = sum(round(B_g_m2_DW, digits=2)),
#           Abundance.m3 = sum(round(Abundance.m3., digits=2)),
#           AdultBody_size_mg = max(round(Average_biomass_per_individual.mg., digits=2)))
# print("nrow_after")
# nrow(df_2)
# //////////////////////////////////////////////////////////////////////////////////
#  reduce to speices only by SUMMING b across all SIZE CLASSES (for each year and season)
df_2_seasyr_specieslev = df_2_sizeclasslev %>%
group_by(Year, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%
summarise(B_mean_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=2)),
B_mean_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=2)),
Abundance_mean_m3 = sum(round(Abundance.m3, digits=2)),
# want to use adults size class for reference so take max mean body size
AdultBody_mean_size_mg = max(round(AdultBody_size_mg, digits=2))) %>%
distinct() %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
print("aggregating by species complete")
# ////////////////////////////////////////////////////////////////////
# label taxa by MODEL CODE and re-group
df_2_seasyr_specieslev$modelgroup = "misc"
df_2_seasyr_specieslev = df_2_seasyr_specieslev %>%
mutate(modelgroup = case_when((Phylum=="Chordata"& Class!="Appendicularia") ~ "ZF1-ICH",
Phylum=="Cnidaria" & (Class=="Scyphozoa" | Family=="Aequoreidae") ~ "ZS1-JEL",
Phylum=="Ctenophora" | (Phylum=="Cnidaria" & Class=="Hydrozoa" & Family!="Aequoreidae") ~ "ZS2-CTH",
(Phylum=="Chaetognatha" | Class=="Polychaeta" | Class=="Gastropoda") ~ "ZS3-CHA",
Class=="Appendicularia" ~ "ZS4-LAR",
((Order=="Calanoida" & Family!="Calanidae" & Family!="Eucalanidae") | Class=="Ostracoda") ~ "ZC5-CSM",
(Family=="Calanidae" | Family=="Eucalanidae") ~ "ZC4-CLG",
(Order=="Decapoda" | Order=="Thecostraca") ~ "ZC3-DEC",
Order=="Amphipoda"  ~ "ZC2-AMP",
Order=="Euphausiacea" ~ "ZC1-EUP",
TRUE ~ "misc"
)
) %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
print("completed modelgroup labels")
# ////////////////////////////////////////////////////////////////////
# convert DW to WET WEIGHT
df_2_seasyr_specieslev$B_mean_g_m2_WW = 0
df_2_seasyr_specieslev$B_mean_mg_m3_WW = 0
df_2_seasyr_specieslev = df_2_seasyr_specieslev %>%
mutate(B_mean_g_m2_WW = case_when(modelgroup=="ZC1-EUP" ~ DW_to_WW_ZC1_EUP * B_mean_g_m2_DW,
modelgroup=="ZC2-AMP" ~ DW_to_WW_ZC2_AMP * B_mean_g_m2_DW,
modelgroup=="ZC3-DEC" ~ DW_to_WW_ZC3_DEC * B_mean_g_m2_DW,
modelgroup=="ZC4-CLG" ~ DW_to_WW_ZC4_CLG * B_mean_g_m2_DW,
modelgroup=="ZC5-CSM" ~ DW_to_WW_ZC5_CSM * B_mean_g_m2_DW,
modelgroup=="ZS1-JEL" ~ DW_to_WW_ZG1_JEL * B_mean_g_m2_DW,
modelgroup=="ZS2-CTH" ~ DW_to_WW_ZG2_CTH * B_mean_g_m2_DW,
modelgroup=="ZS3-CHA" ~ DW_to_WW_ZG3_CHA * B_mean_g_m2_DW,
modelgroup=="ZS4-LAR" ~ DW_to_WW_ZG4_LAR * B_mean_g_m2_DW,
modelgroup=="ZF1-ICH" ~ DW_to_WW_ZF1_ICH * B_mean_g_m2_DW,
# else default
TRUE ~ DW_to_WW_zoop * B_mean_g_m2_DW
)
) %>%
mutate(B_mean_mg_m3_WW = case_when(modelgroup=="ZC1-EUP" ~ DW_to_WW_ZC1_EUP * B_mean_mg_m3_DW,
modelgroup=="ZC2-AMP" ~ DW_to_WW_ZC2_AMP * B_mean_mg_m3_DW,
modelgroup=="ZC3-DEC" ~ DW_to_WW_ZC3_DEC * B_mean_mg_m3_DW,
modelgroup=="ZC4-CLG" ~ DW_to_WW_ZC4_CLG * B_mean_mg_m3_DW,
modelgroup=="ZC5-CSM" ~ DW_to_WW_ZC5_CSM * B_mean_mg_m3_DW,
modelgroup=="ZS1-JEL" ~ DW_to_WW_ZG1_JEL * B_mean_mg_m3_DW,
modelgroup=="ZS2-CTH" ~ DW_to_WW_ZG2_CTH * B_mean_mg_m3_DW,
modelgroup=="ZS3-CHA" ~ DW_to_WW_ZG3_CHA * B_mean_mg_m3_DW,
modelgroup=="ZS4-LAR" ~ DW_to_WW_ZG4_LAR * B_mean_mg_m3_DW,
modelgroup=="ZF1-ICH" ~ DW_to_WW_ZF1_ICH * B_mean_mg_m3_DW,
# else default
TRUE ~ DW_to_WW_zoop * B_mean_mg_m3_DW
)
) %>%
arrange(desc(B_mean_g_m2_WW), .by_group = FALSE)
print("wet wet calculations complete")
# ////////////////////////////////////////////////////////////////////
# convert DW to CARBON
df_2_seasyr_specieslev$B_mean_g_m2_C = 0
df_2_seasyr_specieslev$B_mean_mg_m3_C = 0
df_2_seasyr_specieslev = df_2_seasyr_specieslev %>%
mutate(B_mean_g_m2_C = case_when(modelgroup=="ZC1-EUP" ~ DW_to_C_ZC1_EUP * B_mean_g_m2_DW,
modelgroup=="ZC2-AMP" ~ DW_to_C_ZC2_AMP * B_mean_g_m2_DW,
modelgroup=="ZC3-DEC" ~ DW_to_C_ZC3_DEC * B_mean_g_m2_DW,
modelgroup=="ZC4-CLG" ~ DW_to_C_ZC4_CLG * B_mean_g_m2_DW,
modelgroup=="ZC5-CSM" ~ DW_to_C_ZC5_CSM * B_mean_g_m2_DW,
modelgroup=="ZS1-JEL" ~ DW_to_C_ZG1_JEL * B_mean_g_m2_DW,
modelgroup=="ZS2-CTH" ~ DW_to_C_ZG2_CTH * B_mean_g_m2_DW,
modelgroup=="ZS3-CHA" ~ DW_to_C_ZG3_CHA * B_mean_g_m2_DW,
modelgroup=="ZS4-LAR" ~ DW_to_C_ZG4_LAR * B_mean_g_m2_DW,
modelgroup=="ZF1-ICH" ~ DW_to_C_ZF1_ICH * B_mean_g_m2_DW,
# else default
TRUE ~ DW_to_C_zoop * B_mean_g_m2_DW
)
) %>%
mutate(B_mean_mg_m3_C = case_when(modelgroup=="ZC1-EUP" ~ DW_to_C_ZC1_EUP * B_mean_mg_m3_DW,
modelgroup=="ZC2-AMP" ~ DW_to_C_ZC2_AMP * B_mean_mg_m3_DW,
modelgroup=="ZC3-DEC" ~ DW_to_C_ZC3_DEC * B_mean_mg_m3_DW,
modelgroup=="ZC4-CLG" ~ DW_to_C_ZC4_CLG * B_mean_mg_m3_DW,
modelgroup=="ZC5-CSM" ~ DW_to_C_ZC5_CSM * B_mean_mg_m3_DW,
modelgroup=="ZS1-JEL" ~ DW_to_C_ZG1_JEL * B_mean_mg_m3_DW,
modelgroup=="ZS2-CTH" ~ DW_to_C_ZG2_CTH * B_mean_mg_m3_DW,
modelgroup=="ZS3-CHA" ~ DW_to_C_ZG3_CHA * B_mean_mg_m3_DW,
modelgroup=="ZS4-LAR" ~ DW_to_C_ZG4_LAR * B_mean_mg_m3_DW,
modelgroup=="ZF1-ICH" ~ DW_to_C_ZF1_ICH * B_mean_mg_m3_DW,
# else default
TRUE ~ DW_to_C_zoop * B_mean_mg_m3_DW
)
) %>%
arrange(desc(B_mean_g_m2_C), .by_group = FALSE)
print("carbon calculations complete")
# //////////////////////////////////////////////////////////////////////////////////
# summary across all YEARS - at species level, not modelgroup level
# how many years of data?
yearsdf = df_2_seasyr_specieslev %>% ungroup() %>% summarize(max_yr = max(Year),
min_yr = min(Year))
years = yearsdf$max_yr - yearsdf$min_yr
df_2_summary = df_2_seasyr_specieslev %>%
group_by(season,Phylum,Class,Order,Family,Genus,Species,Genus_species,modelgroup) %>%
summarise(B_sum_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=4)),
B_sum_g_m2_WW = sum(round(B_mean_g_m2_WW, digits=4)),
B_sum_g_m2_C = sum(round(B_mean_g_m2_C, digits=4)),
B_sum_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=4)),
B_sum_mg_m3_WW = sum(round(B_mean_mg_m3_WW, digits=4)),
B_sum_mg_m3_C = sum(round(B_mean_mg_m3_C, digits=4)),
AdultBody_size_mg_mean = mean(round(AdultBody_mean_size_mg, digits=4)),
n = n_surveys,
# n occurrences just used for cross checks
n_occurrences = n()) %>%
mutate(B_mean_g_m2_DW = round(B_sum_g_m2_DW / years, digits=4)) %>%
mutate(B_mean_g_m2_WW = round(B_sum_g_m2_WW / years, digits=4)) %>%
mutate(B_mean_g_m2_C = round(B_sum_g_m2_C / years, digits=4)) %>%
mutate(B_mean_mg_m3_DW = round(B_sum_mg_m3_DW / years, digits=4)) %>%
mutate(B_mean_mg_m3_WW = round(B_sum_mg_m3_WW / years, digits=4)) %>%
mutate(B_mean_mg_m3_C = round(B_sum_mg_m3_C / years, digits=4)) %>%
distinct() %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
# df_2_summary
# adjust this for compat with code below
df_2_yrseas_mean = df_2_seasyr_specieslev
df_2_yrseas_mean$AdultBody_size_mg_mean =  df_2_yrseas_mean$AdultBody_mean_size_mg
print("seasonal summary across years complete")
# ////////////////////////////////////////////////////////////////////
# cross check stats on what groups are uncategorized
#missing gastropods (mollusc; Limacina.helicina,Clione.limacina), fish
df_2_summary %>%
group_by(modelgroup) %>%
summarize(mean = mean(B_mean_g_m2_DW),
sum = sum(B_mean_g_m2_DW)) %>%
arrange(desc(sum), .by_group = FALSE)
df_2_summary %>%
filter(modelgroup == "misc") %>%
group_by(Genus_species) %>%
summarize(mean = mean(B_mean_g_m2_DW),
sum = sum(B_mean_g_m2_DW)) %>%
arrange(desc(sum), .by_group = FALSE)
# ////////////////////////////////////////////////////////////////////
# sum by group within season
# get average by modelgroup over seasons
temp1 = df_2_summary %>%
group_by(season,modelgroup) %>%
summarise(B_mean_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=4)),
B_mean_g_m2_WW = sum(round(B_mean_g_m2_WW, digits=4)),
B_mean_g_m2_C = sum(round(B_mean_g_m2_C, digits=4)),
B_mean_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=4)),
B_mean_mg_m3_WW = sum(round(B_mean_mg_m3_WW, digits=4)),
B_mean_mg_m3_C = sum(round(B_mean_mg_m3_C, digits=4))) %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE) %>%
mutate(season = factor(season, levels=c("winter", "spring", "summer", "fall")))
print("averaging all b across seasons...")
n_seasons = 4
avg_B_modelgroups = temp1 %>%
group_by(modelgroup) %>%
summarise(B_sum_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=4)),
B_sum_g_m2_WW = sum(round(B_mean_g_m2_WW, digits=4)),
B_sum_g_m2_C = sum(round(B_mean_g_m2_C, digits=4)),
B_sum_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=4)),
B_sum_mg_m3_WW = sum(round(B_mean_mg_m3_WW, digits=4)),
B_sum_mg_m3_C = sum(round(B_mean_mg_m3_C, digits=4))) %>%
mutate(B_mean_g_m2_DW = round(B_sum_g_m2_DW / n_seasons, digits=4)) %>%
mutate(B_mean_g_m2_WW = round(B_sum_g_m2_WW / n_seasons, digits=4)) %>%
mutate(B_mean_g_m2_C = round(B_sum_g_m2_C / n_seasons, digits=4)) %>%
mutate(B_mean_mg_m3_DW = round(B_sum_mg_m3_DW / n_seasons, digits=4)) %>%
mutate(B_mean_mg_m3_WW = round(B_sum_mg_m3_WW / n_seasons, digits=4)) %>%
mutate(B_mean_mg_m3_C = round(B_sum_mg_m3_C / n_seasons, digits=4)) %>%
arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)
# ////////////////////////////////////////////////////////////////////
# attempt to adjust for spatial sampling biases (see text)
# ////////////////////////////////////////////////////////////////////
# calc tow depth range percent of column on average
# shoudl probably be seasonally stratified but this is quick and just a rough est
avg_tow_depth_perc = df_2 %>% select(Index, tow_depth_range, Bottom_depth.m.) %>%
mutate(tow_depth_range_per = tow_depth_range / Bottom_depth.m.) %>%
distinct() %>%
summarise(n = n(),
tow_depth_range_per_avg = mean(tow_depth_range_per)) %>%
pull(tow_depth_range_per_avg)
# ////////////////////////////////////////////////////////////////////
# adjust for over-estimation due to deep water bias in samples
# get annual total avg conc
# WW
ZC1_EUP_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZC1-EUP") %>% pull(B_mean_mg_m3_WW)
ZC2_AMP_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZC2-AMP") %>% pull(B_mean_mg_m3_WW)
ZC3_DEC_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZC3-DEC") %>% pull(B_mean_mg_m3_WW)
ZC4_CLG_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZC4-CLG") %>% pull(B_mean_mg_m3_WW)
ZC5_CSM_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZC5-CSM") %>% pull(B_mean_mg_m3_WW)
ZS1_JEL_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZS1-JEL") %>% pull(B_mean_mg_m3_WW)
ZS2_CTH_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZS2-CTH") %>% pull(B_mean_mg_m3_WW)
ZS3_CHA_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZS3-CHA") %>% pull(B_mean_mg_m3_WW)
ZS4_LAR_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZS4-LAR") %>% pull(B_mean_mg_m3_WW)
ZF1_ICH_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "ZF1-ICH") %>% pull(B_mean_mg_m3_WW)
misc_mg_m3_avg_WW = avg_B_modelgroups %>% filter(modelgroup == "misc") %>% pull(B_mean_mg_m3_WW)
#carbon
ZC1_EUP_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZC1-EUP") %>% pull(B_mean_mg_m3_C)
ZC2_AMP_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZC2-AMP") %>% pull(B_mean_mg_m3_C)
ZC3_DEC_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZC3-DEC") %>% pull(B_mean_mg_m3_C)
ZC4_CLG_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZC4-CLG") %>% pull(B_mean_mg_m3_C)
ZC5_CSM_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZC5-CSM") %>% pull(B_mean_mg_m3_C)
ZS1_JEL_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZS1-JEL") %>% pull(B_mean_mg_m3_C)
ZS2_CTH_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZS2-CTH") %>% pull(B_mean_mg_m3_C)
ZS3_CHA_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZS3-CHA") %>% pull(B_mean_mg_m3_C)
ZS4_LAR_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZS4-LAR") %>% pull(B_mean_mg_m3_C)
ZF1_ICH_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "ZF1-ICH") %>% pull(B_mean_mg_m3_C)
misc_mg_m3_avg_C = avg_B_modelgroups %>% filter(modelgroup == "misc") %>% pull(B_mean_mg_m3_C)
df_depths$ZC1_EUP = 0
df_depths$ZC2_AMP = 0
df_depths$ZC3_DEC = 0
df_depths$ZC4_CLG = 0
df_depths$ZC5_CSM = 0
df_depths$ZS1_JEL = 0
df_depths$ZS2_CTH = 0
df_depths$ZS3_CHA = 0
df_depths$ZS4_LAR = 0
df_depths$ZF1_FIS = 0
df_depths$misc = 0
# wet weight
avg_B_WW_modelgroups_better = df_depths %>%
mutate(ZC1_EUP = depth * avg_tow_depth_perc * ZC1_EUP_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZC2_AMP = depth * avg_tow_depth_perc * ZC2_AMP_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZC3_DEC = depth * avg_tow_depth_perc * ZC3_DEC_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZC4_CLG = depth * avg_tow_depth_perc * ZC4_CLG_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZC5_CSM = depth * avg_tow_depth_perc * ZC5_CSM_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZS1_JEL = depth * avg_tow_depth_perc * ZS1_JEL_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZS2_CTH = depth * avg_tow_depth_perc * ZS2_CTH_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZS3_CHA = depth * avg_tow_depth_perc * ZS3_CHA_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZS4_LAR = depth * avg_tow_depth_perc * ZS4_LAR_mg_m3_avg_WW * mg_to_g) %>%
mutate(ZF1_ICH = depth * avg_tow_depth_perc * ZF1_ICH_mg_m3_avg_WW * mg_to_g) %>%
mutate(misc = depth * misc_mg_m3_avg_WW * mg_to_g) %>%
summarise(ZC1_EUP = round(mean(ZC1_EUP),digits=2),
ZC2_AMP = round(mean(ZC2_AMP),digits=2),
ZC3_DEC = round(mean(ZC3_DEC),digits=2),
ZC4_CLG = round(mean(ZC4_CLG),digits=2),
ZC5_CSM = round(mean(ZC5_CSM),digits=2),
ZS1_JEL = round(mean(ZS1_JEL),digits=2),
ZS2_CTH = round(mean(ZS2_CTH),digits=2),
ZS3_CHA = round(mean(ZS3_CHA),digits=2),
ZS4_LAR = round(mean(ZS4_LAR),digits=2),
ZF1_ICH = round(mean(ZF1_ICH),digits=2),
misc = round(mean(misc),digits=2)) %>%
pivot_longer(everything(), names_to = "modelgroup", values_to = "B_mean_g_m2_WW")
# carbon
avg_B_C_modelgroups_better = df_depths %>%
mutate(ZC1_EUP = depth * avg_tow_depth_perc * ZC1_EUP_mg_m3_avg_C * mg_to_g) %>%
mutate(ZC2_AMP = depth * avg_tow_depth_perc * ZC2_AMP_mg_m3_avg_C * mg_to_g) %>%
mutate(ZC3_DEC = depth * avg_tow_depth_perc * ZC3_DEC_mg_m3_avg_C * mg_to_g) %>%
mutate(ZC4_CLG = depth * avg_tow_depth_perc * ZC4_CLG_mg_m3_avg_C * mg_to_g) %>%
mutate(ZC5_CSM = depth * avg_tow_depth_perc * ZC5_CSM_mg_m3_avg_C * mg_to_g) %>%
mutate(ZS1_JEL = depth * avg_tow_depth_perc * ZS1_JEL_mg_m3_avg_C * mg_to_g) %>%
mutate(ZS2_CTH = depth * avg_tow_depth_perc * ZS2_CTH_mg_m3_avg_C * mg_to_g) %>%
mutate(ZS3_CHA = depth * avg_tow_depth_perc * ZS3_CHA_mg_m3_avg_C * mg_to_g) %>%
mutate(ZS4_LAR = depth * avg_tow_depth_perc * ZS4_LAR_mg_m3_avg_C * mg_to_g) %>%
mutate(ZF1_ICH = depth * avg_tow_depth_perc * ZF1_ICH_mg_m3_avg_C * mg_to_g) %>%
mutate(misc = depth * misc_mg_m3_avg_C * mg_to_g) %>%
summarise(ZC1_EUP = round(mean(ZC1_EUP),digits=4),
ZC2_AMP = round(mean(ZC2_AMP),digits=4),
ZC3_DEC = round(mean(ZC3_DEC),digits=4),
ZC4_CLG = round(mean(ZC4_CLG),digits=4),
ZC5_CSM = round(mean(ZC5_CSM),digits=4),
ZS1_JEL = round(mean(ZS1_JEL),digits=4),
ZS2_CTH = round(mean(ZS2_CTH),digits=4),
ZS3_CHA = round(mean(ZS3_CHA),digits=4),
ZS4_LAR = round(mean(ZS4_LAR),digits=4),
ZF1_ICH = round(mean(ZF1_ICH),digits=4),
misc = round(mean(misc),digits=4)) %>%
pivot_longer(everything(), names_to = "modelgroup", values_to = "B_mean_g_m2_C")
# ////////////////////////////////////////////////////////////////////
# convert back from WW to DW
avg_B_WW_modelgroups_better$B_mean_g_m2_DW = 0
avg_B_WW_modelgroups_better = avg_B_WW_modelgroups_better %>%
mutate(B_mean_g_m2_DW = case_when(modelgroup=="ZC1_EUP" ~ B_mean_g_m2_WW / DW_to_WW_ZC1_EUP,
modelgroup=="ZC2_AMP" ~ B_mean_g_m2_WW / DW_to_WW_ZC2_AMP,
modelgroup=="ZC3_DEC" ~ B_mean_g_m2_WW / DW_to_WW_ZC3_DEC,
modelgroup=="ZC4_CLG" ~ B_mean_g_m2_WW / DW_to_WW_ZC4_CLG,
modelgroup=="ZC5_CSM" ~ B_mean_g_m2_WW / DW_to_WW_ZC5_CSM,
modelgroup=="ZS1_JEL" ~ B_mean_g_m2_WW / DW_to_WW_ZG1_JEL,
modelgroup=="ZS2_CTH" ~ B_mean_g_m2_WW / DW_to_WW_ZG2_CTH,
modelgroup=="ZS3_CHA" ~ B_mean_g_m2_WW / DW_to_WW_ZG3_CHA,
modelgroup=="ZS4_LAR" ~ B_mean_g_m2_WW / DW_to_WW_ZG4_LAR,
modelgroup=="ZF1_ICH" ~ B_mean_g_m2_WW / DW_to_WW_ZF1_ICH,
modelgroup=="misc" ~ B_mean_g_m2_WW / DW_to_WW_zoop,
# else default
TRUE ~ B_mean_g_m2_WW / DW_to_WW_zoop
))
# join
avg_B_modelgroups_better = inner_join(avg_B_WW_modelgroups_better, avg_B_C_modelgroups_better, by = c("modelgroup"="modelgroup"))
# ////////////////////////////////////////////////////////////////////
# adjust for over-estimation due to deep water bias in samples
# seasonal avg by species
# ////////////////////////////////////////////////////////////////////
# convert back from WW to DW at seasonal and species level
# df_2_summary
# using actual depths across domain get actual B using m3 conc
df_depths <- read.csv(paste(path_depths, file_depths,sep=""))
get_avg_depth_int <- function(m3) {
m2 = df_depths %>%
mutate(m2_int = depth * avg_tow_depth_perc * m3 * mg_to_g) %>%
summarise(m2_int_avg = round(mean(m2_int),digits=4)) %>%
pull(m2_int_avg)
return(m2)
}
df_2_summary <- df_2_summary %>% rowwise() %>%
mutate(adj_DW_g_m2 = get_avg_depth_int(B_mean_mg_m3_DW)) %>%
mutate(adj_WW_g_m2 = get_avg_depth_int(B_mean_mg_m3_WW)) %>%
mutate(adj_C_g_m2 = get_avg_depth_int(B_mean_mg_m3_C))
df_2_summary
path = "C://Users//Greig//Sync//6. SSMSP Model//Model Greig//Data//4. Zooplankton//Zoop_Perryetal_2021//MODIFIED//"
write.csv(df_2_summary,
file = file.path(path, "Zoopl_SofG_1996-2018_df_summary.csv"),
row.names = FALSE)
View(n_surveys_yrseas)
