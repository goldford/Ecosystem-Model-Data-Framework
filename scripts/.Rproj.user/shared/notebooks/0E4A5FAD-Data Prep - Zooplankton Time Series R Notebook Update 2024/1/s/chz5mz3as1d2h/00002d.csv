"0","# correspondence with I. Perry and K. Young Nov 16 2021"
"0","# - the mg m-2 is calculated using the tow start - end depth"
"0","# calculate the tow depth range"
"0","df_2['tow_depth_range'] = abs(df_2['Tow_start_depth.m.'])-abs(df_2['Tow_end_depth.m.'])"
"0","summary(df_2['tow_depth_range'])"
"1",""
"1"," tow_depth_range"
"1","
"
"1"," Min.   : 48.0  "
"1","
"
"1"," 1st Qu.:231.0  "
"1","
"
"1"," Median :290.0  "
"1","
"
"1"," Mean   :277.2  "
"1","
"
"1"," 3rd Qu.:344.0  "
"1","
"
"1"," Max.   :420.0  "
"1","
"
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","# net avoidance euphausiids adjust by 3x for adults"
"0","netavoid_x = 3"
"0",""
"0","df_2 = df_2 %>%"
"0","    mutate(Abundance.m3. = case_when((size_class==""s3"" & Order == ""Euphausiacea"") ~ Abundance.m3. * netavoid_x,"
"0","                                    TRUE ~ Abundance.m3.)) "
"0",""
"0","# cross-check"
"0","euphausiids = df_2 %>% filter(Order == ""Euphausiacea"")"
"0","colnames(euphausiids)"
"1"," [1]"
"1"," ""Index""                             "
"1"," ""Region""                            "
"1","
"
"1"," [3]"
"1"," ""Station""                           "
"1"," ""Longitude.N.""                      "
"1","
"
"1"," [5]"
"1"," ""Latitude.W.""                       "
"1"," ""Year""                              "
"1","
"
"1"," [7]"
"1"," ""Month""                             "
"1"," ""Day""                               "
"1","
"
"1"," [9]"
"1"," ""Time""                              "
"1"," ""Twilight""                          "
"1","
"
"1","[11]"
"1"," ""Net_type""                          "
"1"," ""Net_Diameter.m.""                   "
"1","
"
"1","[13]"
"1"," ""Mesh_size.micro.m.""                "
"1"," ""Tow_start_depth.m.""                "
"1","
"
"1","[15]"
"1"," ""Tow_end_depth.m.""                  "
"1"," ""Bottom_depth.m.""                   "
"1","
"
"1","[17]"
"1"," ""Volume.m3.""                        "
"1"," ""Phylum""                            "
"1","
"
"1","[19]"
"1"," ""Class""                             "
"1"," ""Order""                             "
"1","
"
"1","[21]"
"1"," ""Family""                            "
"1"," ""Genus""                             "
"1","
"
"1","[23]"
"1"," ""Species""                           "
"1"," ""Genus_species""                     "
"1","
"
"1","[25]"
"1"," ""Size_class_or_life_stage""          "
"1"," ""size_class""                        "
"1","
"
"1","[27]"
"1"," ""Abundance.m3.""                     "
"1"," ""Average_biomass_per_individual.mg."""
"1","
"
"1","[29]"
"1"," ""tow_depth_range""                   "
"1","
"
"0","#arrange(euphausiids, desc(B_g_m2_DW), .by_group = FALSE)"
"0","print(unique(euphausiids$Genus_species))"
"1"," [1]"
"1"," ""Euphausia.pacifica""      "
"1"," ""Thysanoessa.longipes""    "
"1"," ""Euphausiidae.*sp.""       "
"1","
"
"1"," [4]"
"1"," ""Thysanoessa.spinifera""   "
"1"," ""Thysanoessa.raschii""     "
"1"," ""Nematoscelis.difficilis"" "
"1","
"
"1"," [7]"
"1"," ""Thysanoessa.inspinata""   "
"1"," ""Nematoscelis.*sp.""       "
"1"," ""Thysanoessa.inermis""     "
"1","
"
"1","[10]"
"1"," ""Tessarabrachion.oculatum"""
"1"," ""Thysanoessa.*sp.""        "
"1"," ""Euphausiacea.*sp.""       "
"1","
"
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","# create a season field"
"0","df_2 = df_2 %>%"
"0","    mutate(B_mg_m3_DW = Abundance.m3. * Average_biomass_per_individual.mg.) %>% # convert to mg m-3"
"0","    mutate(B_g_m2_DW = B_mg_m3_DW * tow_depth_range * mg_to_g) %>%  # mg m-3 to g m-2"
"0","    # not converting to WW B yet"
"0","    mutate(season = case_when(Month == 12 | Month == 1 | Month == 2 ~ ""winter"", "
"0","                            Month == 3 | Month == 4 | Month == 5 ~ ""spring"", "
"0","                            Month == 6 | Month == 7 | Month == 8 ~ ""summer"",  "
"0","                            Month == 9 | Month == 10 | Month == 11 ~ ""fall"")) "
"0","nrow(df_2)"
"1","[1]"
"1"," 81544"
"1","
"
"0","# Perry et al selected start depths with gt 150 m and  those with start depths <150 where "
"0","# the tow depth range was gt 70% of the water column"
"0","df_2 = df_2 %>% "
"0","  mutate(towrange_as_prop_watercol = tow_depth_range / Bottom_depth.m.) %>%"
"0","  filter(towrange_as_prop_watercol >= 0.7 | Tow_start_depth.m. >= 150)"
"0","nrow(df_2)"
"1","[1]"
"1"," 81544"
"1","
"
"0","# seems like the filter above was already applied"
"0","#print(""groups ordered by DW B"")"
"0","#arrange(df_2, desc(B_g_m2_DW), .by_group = FALSE)"
"0",""
"0",""
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","# n_surveys used to avoid biasing density estimates using these presence-only data"
"0","# (absent species are not reported in these data)"
"0","n_surveys = n_distinct(df_2[c('Index')])"
"0","df_2$n_surveys = n_surveys"
"0","# table of surveys conducted per year"
"0","n_surveys_yr = df_2 %>% group_by(Year,Index) %>% "
"0","    summarise(n = n()) %>%"
"0","    mutate(surveycount = 1) %>%"
"0","    ungroup() %>%"
"0","    group_by(Year) %>%"
"0","    summarise(count_surveys_yr = sum(surveycount))"
"2","`summarise()` has grouped output by 'Year'. You can override using the `.groups` argument."
"0","df_2 = inner_join(df_2, n_surveys_yr, by = c(""Year""=""Year""))"
"0","#df_2 = inner_join(df_2, n_surveys_yr, cols = ""Year"")"
"0",""
"0",""
"0","# per year  and season"
"0","n_surveys_yrseas = df_2 %>% group_by(Year,season,Index) %>% "
"0","    summarise(n = n()) %>%"
"0","    mutate(surveycount = 1) %>%"
"0","    ungroup() %>%"
"0","    group_by(Year,season) %>%"
"0","    summarise(count_surveys_yrseas = sum(surveycount))"
"2","`summarise()` has grouped output by 'Year', 'season'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'Year'. You can override using the `.groups` argument."
"0","#df_2 = inner_join(df_2, n_surveys_yrseas, cols = c(""Year"",""season""))"
"0","df_2 = inner_join(df_2, n_surveys_yrseas, by = c(""Year""=""Year"", ""season""=""season""))"
"0",""
"0",""
"0","colnames(df_2)"
"1"," [1]"
"1"," ""Index""                             "
"1"," ""Region""                            "
"1","
"
"1"," [3]"
"1"," ""Station""                           "
"1"," ""Longitude.N.""                      "
"1","
"
"1"," [5]"
"1"," ""Latitude.W.""                       "
"1"," ""Year""                              "
"1","
"
"1"," [7]"
"1"," ""Month""                             "
"1"," ""Day""                               "
"1","
"
"1"," [9]"
"1"," ""Time""                              "
"1"," ""Twilight""                          "
"1","
"
"1","[11]"
"1"," ""Net_type""                          "
"1"," ""Net_Diameter.m.""                   "
"1","
"
"1","[13]"
"1"," ""Mesh_size.micro.m.""                "
"1"," ""Tow_start_depth.m.""                "
"1","
"
"1","[15]"
"1"," ""Tow_end_depth.m.""                  "
"1"," ""Bottom_depth.m.""                   "
"1","
"
"1","[17]"
"1"," ""Volume.m3.""                        "
"1"," ""Phylum""                            "
"1","
"
"1","[19]"
"1"," ""Class""                             "
"1"," ""Order""                             "
"1","
"
"1","[21]"
"1"," ""Family""                            "
"1"," ""Genus""                             "
"1","
"
"1","[23]"
"1"," ""Species""                           "
"1"," ""Genus_species""                     "
"1","
"
"1","[25]"
"1"," ""Size_class_or_life_stage""          "
"1"," ""size_class""                        "
"1","
"
"1","[27]"
"1"," ""Abundance.m3.""                     "
"1"," ""Average_biomass_per_individual.mg."""
"1","
"
"1","[29]"
"1"," ""tow_depth_range""                   "
"1"," ""B_mg_m3_DW""                        "
"1","
"
"1","[31]"
"1"," ""B_g_m2_DW""                         "
"1"," ""season""                            "
"1","
"
"1","[33]"
"1"," ""towrange_as_prop_watercol""         "
"1"," ""n_surveys""                         "
"1","
"
"1","[35]"
"1"," ""count_surveys_yr""                  "
"1"," ""count_surveys_yrseas""              "
"1","
"
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","# get average by YEAR and SEASON using taxa resoluation (size class)"
"0","print(""YEAR, SEASON, summary nrow before"")"
"1","[1]"
"1"," ""YEAR, SEASON, summary nrow before"""
"1","
"
"0","nrow(df_2)"
"1","[1]"
"1"," 81544"
"1","
"
"0","df_2_sizeclasslev = df_2 %>% "
"0","    group_by(Year, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,Size_class_or_life_stage,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%"
"0","    summarise(B_mg_m3_DW = sum(round(B_mg_m3_DW, digits=2)),"
"0","          B_g_m2_DW = sum(round(B_g_m2_DW, digits=2)),"
"0","          Abundance.m3 = sum(round(Abundance.m3., digits=2)),"
"0","          AdultBody_size_mg = mean(round(Average_biomass_per_individual.mg., digits=2)),"
"0","          # n_occurrences is not used but summarizes how often the group appears in that season / year surveys"
"0","          n_occurrences = n()) %>%  "
"0","    # divide the sums from above by proper denominator (count of surveys done including zero abundance ones)"
"0","    mutate(B_mean_mg_m3_DW = round(B_mg_m3_DW / count_surveys_yrseas, digits=2)) %>%"
"0","    mutate(B_mean_g_m2_DW = round(B_g_m2_DW / count_surveys_yrseas, digits=2)) %>%"
"0","    distinct() %>%"
"0","    arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)"
"2","`summarise()` has grouped output by 'Year', 'season', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species', 'Genus_species', 'Size_class_or_life_stage', 'n_surveys', 'count_surveys_yr'. You can override using the `.groups` argument."
"0","print(""nrow_after"")"
"1","[1]"
"1"," ""nrow_after"""
"1","
"
"0","nrow(df_2_sizeclasslev)"
"1","[1]"
"1"," 14952"
"1","
"
"0","# old way"
"0","# print(""summarize by Genus_species instead of Size_class_or_life_stage"")"
"0","# print(""nrow before"")"
"0","# nrow(df_2)"
"0","# df_2 = df_2 %>% "
"0","#     group_by(Index, Station, Longitude..N., Latitude..W., Year, Month, Day, Time, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%"
"0","#     summarise(B_mg_m3_DW = sum(round(B_mg_m3_DW, digits=2)),"
"0","#           B_g_m2_DW = sum(round(B_g_m2_DW, digits=2)),"
"0","#           Abundance.m3 = sum(round(Abundance.m3., digits=2)),"
"0","#           AdultBody_size_mg = max(round(Average_biomass_per_individual.mg., digits=2))) "
"0","# print(""nrow_after"")"
"0","# nrow(df_2)"
"0",""
"0",""
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","#  reduce to speices only by SUMMING b across all SIZE CLASSES (for each year and season)"
"0","df_2_seasyr_specieslev = df_2_sizeclasslev %>% "
"0","    group_by(Year, season, Phylum,Class,Order,Family,Genus,Species,Genus_species,n_surveys,count_surveys_yr,count_surveys_yrseas) %>%"
"0","    summarise(B_mean_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=2)),"
"0","          B_mean_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=2)),"
"0","          Abundance_mean_m3 = sum(round(Abundance.m3, digits=2)),"
"0","          # want to use adults size class for reference so take max mean body size"
"0","          AdultBody_mean_size_mg = max(round(AdultBody_size_mg, digits=2))) %>%"
"0","      distinct() %>%"
"0","      arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)"
"2","`summarise()` has grouped output by 'Year', 'season', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species', 'Genus_species', 'n_surveys', 'count_surveys_yr'. You can override using the `.groups` argument."
"0","print(""aggregating by species complete"")"
"1","[1]"
"1"," ""aggregating by species complete"""
"1","
"
"0","# ////////////////////////////////////////////////////////////////////"
"0","# label taxa by MODEL CODE and re-group"
"0","df_2_seasyr_specieslev$modelgroup = ""misc"""
"0","df_2_seasyr_specieslev = df_2_seasyr_specieslev %>% "
"0","    mutate(modelgroup = case_when((Phylum==""Chordata""& Class!=""Appendicularia"") ~ ""ZF1-ICH"","
"0","                                  Phylum==""Cnidaria"" & (Class==""Scyphozoa"" | Family==""Aequoreidae"") ~ ""ZS1-JEL"","
"0","                                  Phylum==""Ctenophora"" | (Phylum==""Cnidaria"" & Class==""Hydrozoa"" & Family!=""Aequoreidae"") ~ ""ZS2-CTH"","
"0","                                  (Phylum==""Chaetognatha"" | Class==""Polychaeta"" | Class==""Gastropoda"") ~ ""ZS3-CHA"","
"0","                                  Class==""Appendicularia"" ~ ""ZS4-LAR"","
"0","                                  ((Order==""Calanoida"" & Family!=""Calanidae"" & Family!=""Eucalanidae"") | Class==""Ostracoda"") ~ ""ZC5-CSM"","
"0","                                  (Family==""Calanidae"" | Family==""Eucalanidae"") ~ ""ZC4-CLG"","
"0","                                  (Order==""Decapoda"" | Order==""Thecostraca"") ~ ""ZC3-DEC"","
"0","                                  Order==""Amphipoda""  ~ ""ZC2-AMP"","
"0","                                  Order==""Euphausiacea"" ~ ""ZC1-EUP"","
"0","                                  TRUE ~ ""misc"""
"0","                                 )"
"0","           ) %>% "
"0","    arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)"
"0","print(""completed modelgroup labels"")"
"1","[1]"
"1"," ""completed modelgroup labels"""
"1","
"
"0","# ////////////////////////////////////////////////////////////////////"
"0","# convert DW to WET WEIGHT "
"0",""
"0","df_2_seasyr_specieslev$B_mean_g_m2_WW = 0"
"0","df_2_seasyr_specieslev$B_mean_mg_m3_WW = 0"
"0","df_2_seasyr_specieslev = df_2_seasyr_specieslev %>% "
"0","    mutate(B_mean_g_m2_WW = case_when(modelgroup==""ZC1-EUP"" ~ DW_to_WW_ZC1_EUP * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC2-AMP"" ~ DW_to_WW_ZC2_AMP * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC3-DEC"" ~ DW_to_WW_ZC3_DEC * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC4-CLG"" ~ DW_to_WW_ZC4_CLG * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC5-CSM"" ~ DW_to_WW_ZC5_CSM * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS1-JEL"" ~ DW_to_WW_ZG1_JEL * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS2-CTH"" ~ DW_to_WW_ZG2_CTH * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS3-CHA"" ~ DW_to_WW_ZG3_CHA * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS4-LAR"" ~ DW_to_WW_ZG4_LAR * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZF1-ICH"" ~ DW_to_WW_ZF1_ICH * B_mean_g_m2_DW,"
"0","                                  # else default"
"0","                                  TRUE ~ DW_to_WW_zoop * B_mean_g_m2_DW"
"0","                                 )"
"0","           ) %>% "
"0","    mutate(B_mean_mg_m3_WW = case_when(modelgroup==""ZC1-EUP"" ~ DW_to_WW_ZC1_EUP * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC2-AMP"" ~ DW_to_WW_ZC2_AMP * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC3-DEC"" ~ DW_to_WW_ZC3_DEC * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC4-CLG"" ~ DW_to_WW_ZC4_CLG * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC5-CSM"" ~ DW_to_WW_ZC5_CSM * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS1-JEL"" ~ DW_to_WW_ZG1_JEL * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS2-CTH"" ~ DW_to_WW_ZG2_CTH * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS3-CHA"" ~ DW_to_WW_ZG3_CHA * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS4-LAR"" ~ DW_to_WW_ZG4_LAR * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZF1-ICH"" ~ DW_to_WW_ZF1_ICH * B_mean_mg_m3_DW,"
"0","                                  # else default"
"0","                                  TRUE ~ DW_to_WW_zoop * B_mean_mg_m3_DW"
"0","                                 )"
"0","           ) %>% "
"0","    arrange(desc(B_mean_g_m2_WW), .by_group = FALSE)"
"0","print(""wet wet calculations complete"")"
"1","[1]"
"1"," ""wet wet calculations complete"""
"1","
"
"0","# ////////////////////////////////////////////////////////////////////"
"0","# convert DW to CARBON"
"0","df_2_seasyr_specieslev$B_mean_g_m2_C = 0"
"0","df_2_seasyr_specieslev$B_mean_mg_m3_C = 0"
"0","df_2_seasyr_specieslev = df_2_seasyr_specieslev %>% "
"0","    mutate(B_mean_g_m2_C = case_when(modelgroup==""ZC1-EUP"" ~ DW_to_C_ZC1_EUP * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC2-AMP"" ~ DW_to_C_ZC2_AMP * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC3-DEC"" ~ DW_to_C_ZC3_DEC * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC4-CLG"" ~ DW_to_C_ZC4_CLG * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZC5-CSM"" ~ DW_to_C_ZC5_CSM * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS1-JEL"" ~ DW_to_C_ZG1_JEL * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS2-CTH"" ~ DW_to_C_ZG2_CTH * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS3-CHA"" ~ DW_to_C_ZG3_CHA * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZS4-LAR"" ~ DW_to_C_ZG4_LAR * B_mean_g_m2_DW,"
"0","                                  modelgroup==""ZF1-ICH"" ~ DW_to_C_ZF1_ICH * B_mean_g_m2_DW,"
"0","                                  # else default"
"0","                                  TRUE ~ DW_to_C_zoop * B_mean_g_m2_DW"
"0","                                 )"
"0","           ) %>% "
"0","    mutate(B_mean_mg_m3_C = case_when(modelgroup==""ZC1-EUP"" ~ DW_to_C_ZC1_EUP * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC2-AMP"" ~ DW_to_C_ZC2_AMP * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC3-DEC"" ~ DW_to_C_ZC3_DEC * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC4-CLG"" ~ DW_to_C_ZC4_CLG * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZC5-CSM"" ~ DW_to_C_ZC5_CSM * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS1-JEL"" ~ DW_to_C_ZG1_JEL * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS2-CTH"" ~ DW_to_C_ZG2_CTH * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS3-CHA"" ~ DW_to_C_ZG3_CHA * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZS4-LAR"" ~ DW_to_C_ZG4_LAR * B_mean_mg_m3_DW,"
"0","                                  modelgroup==""ZF1-ICH"" ~ DW_to_C_ZF1_ICH * B_mean_mg_m3_DW,"
"0","                                  # else default"
"0","                                  TRUE ~ DW_to_C_zoop * B_mean_mg_m3_DW"
"0","                                 )"
"0","           ) %>% "
"0","    arrange(desc(B_mean_g_m2_C), .by_group = FALSE)"
"0","print(""carbon calculations complete"")"
"1","[1]"
"1"," ""carbon calculations complete"""
"1","
"
"0","# //////////////////////////////////////////////////////////////////////////////////"
"0","# summary across all YEARS - at species level, not modelgroup level"
"0",""
"0","# how many years of data?"
"0","yearsdf = df_2_seasyr_specieslev %>% ungroup() %>% summarize(max_yr = max(Year),"
"0","                                                  min_yr = min(Year))"
"0","years = yearsdf$max_yr - yearsdf$min_yr"
"0","df_2_summary = df_2_seasyr_specieslev %>% "
"0","    group_by(season,Phylum,Class,Order,Family,Genus,Species,Genus_species,modelgroup) %>%"
"0","    summarise(B_sum_g_m2_DW = sum(round(B_mean_g_m2_DW, digits=2)),"
"0","              B_sum_g_m2_WW = sum(round(B_mean_g_m2_WW, digits=2)),"
"0","              B_sum_g_m2_C = sum(round(B_mean_g_m2_C, digits=2)),"
"0","              B_sum_mg_m3_DW = sum(round(B_mean_mg_m3_DW, digits=2)),"
"0","              B_sum_mg_m3_WW = sum(round(B_mean_mg_m3_WW, digits=2)),"
"0","              B_sum_mg_m3_C = sum(round(B_mean_mg_m3_C, digits=2)),"
"0","          AdultBody_size_mg_mean = mean(round(AdultBody_mean_size_mg, digits=2)),"
"0","          n = n_surveys,"
"0","          # n occurrences just used for cross checks"
"0","          n_occurrences = n()) %>%"
"0","    mutate(B_mean_g_m2_DW = round(B_sum_g_m2_DW / years, digits=2)) %>%"
"0","    mutate(B_mean_g_m2_WW = round(B_sum_g_m2_WW / years, digits=2)) %>%"
"0","    mutate(B_mean_g_m2_C = round(B_sum_g_m2_C / years, digits=2)) %>%"
"0","    mutate(B_mean_mg_m3_DW = round(B_sum_mg_m3_DW / years, digits=2)) %>%"
"0","    mutate(B_mean_mg_m3_WW = round(B_sum_mg_m3_WW / years, digits=2)) %>%"
"0","    mutate(B_mean_mg_m3_C = round(B_sum_mg_m3_C / years, digits=2)) %>%"
"0","    distinct() %>%"
"0","    arrange(desc(B_mean_g_m2_DW), .by_group = FALSE)"
"2","Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in dplyr 1.1.0.
Please use `reframe()` instead.
When switching from `summarise()` to `reframe()`, remember that `reframe()` always returns an ungrouped data frame and adjust accordingly."
"2","`summarise()` has grouped output by 'season', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species', 'Genus_species', 'modelgroup'. You can override using the `.groups` argument."
"0","# df_2_summary"
"0",""
"0","# adjust this for compat with code below"
"0","df_2_yrseas_mean = df_2_seasyr_specieslev"
"0","df_2_yrseas_mean$AdultBody_size_mg_mean =  df_2_yrseas_mean$AdultBody_mean_size_mg"
"0","print(""seasonal summary across years complete"")"
"1","[1]"
"1"," ""seasonal summary across years complete"""
"1","
"
"0","# ////////////////////////////////////////////////////////////////////"
"0","# cross check stats on what groups are uncategorized"
"0","#missing gastropods (mollusc; Limacina.helicina,Clione.limacina), fish"
"0",""
"0","df_2_summary %>% "
"0","  group_by(modelgroup) %>% "
"0","  summarize(mean = mean(B_mean_g_m2_DW),"
"0","            sum = sum(B_mean_g_m2_DW)) %>%"
"0","    arrange(desc(sum), .by_group = FALSE)"
